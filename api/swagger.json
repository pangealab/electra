{
  "swagger": "2.0",
  "info": {
    "description": "This is a pre-production ServiceNow Command Line (CLI) API. Clich [here](https://docs.servicenow.com/integrate/inbound_rest/concept/c_RESTAPI.html) for a full list of production API's.",
    "version": "1.0.0",
    "title": "ServiceNow CLI API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "anthonyangelo@servicenow.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/api/cli",
  "tags": [
    {
      "name": "service",
      "description": "Manage Services",
      "externalDocs": {
        "description": "Find out more about ServiceNow.com",
        "url": "https://www.servicenow.com"
      }
    },
    {
      "name": "event",
      "description": "Manage Events",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://www.servicenow.com"
      }      
    },    
    {
      "name": "incident",
      "description": "Manage Incidents",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://www.servicenow.com"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/register/service": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Register Service",
        "description": "Register a Service",
        "operationId": "registerService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created Service object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/register/services": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Registers a list of Services with given input array",
        "description": "",
        "operationId": "registerServices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of Services object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Service"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/resolve/incident": {
      "put": {
        "tags": [
          "incident"
        ],
        "summary": "Resolve an existing Incident",
        "description": "",
        "operationId": "resolveIncident",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Incident that needs to be resolved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Incident not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/create/event": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "Create an Event",
        "description": "",
        "operationId": "createEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Event Created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Invalid Event"
          }
        }
      }
    }
  },
  "definitions": {
    "Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Service"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "Event Source"
        },
        "node": {
          "type": "string",
          "description": "Event Node"
        },
        "type": {
          "type": "string",
          "description": "Event Type"
        },
        "resource": {
          "type": "string",
          "description": "Event Resource"
        },
        "metricName": {
          "type": "string",
          "description": "Event Metric Name"
        },      
        "sourceInstance": {
          "type": "string",
          "description": "Event Source Instance"
        },
        "messageKey": {
          "type": "string",
          "description": "Event Message Key"
        },
        "severity": {
          "type": "string",
          "description": "Event Severity",
          "enum": [
            "critical",
            "major",
            "minor",
            "warning",
            "info",
            "clear"
          ]
        },
        "resolutionState": {
          "type": "string",
          "description": "Event Resolution State",
          "enum": [
            "new"
          ]
        },   
        "timeOfEvent": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Event Description"
        }
      },
      "xml": {
        "name": "Event"
      }
    },    
    "Incident": {
      "type": "object",
      "required": [
        "number",
        "resolution",
        "notes"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "INC0400001"
        },
        "resolution": {
          "type": "string",
          "description": "Resolution Code",
          "enum": [
            "solved"
          ]
        },
        "notes": {
          "type": "string",
          "description": "Resolution Notes"
        }
      },
      "xml": {
        "name": "Incident"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about ServiceNow",
    "url": "https://www.servicenow.com"
  }
}